version: "3.8"
services:

  db:
    image: postgres:15.6-alpine
    container_name: blog-db
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${DB_NAME}", "-U", "${DB_USER}"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 80s
    volumes:
      - blog-pgdb-data:/var/lib/postgresql/data
    networks:
      - blog-network

  blog:
    build:
      context: .
      args:
        mode: prod
    container_name: blog-api
    restart: always
    ports:
      - 8080:8080
    depends_on:
      db:
        condition: service_healthy
    networks:
      - blog-network
    command: bash -c "./scripts/migrate.sh && ./scripts/runprod.sh"

  nginx:
    image: nginx:alpine
    container_name: blog-nginx
    restart: always
    ports:
      - 80:80
    # depends_on:
    #   blog:
    #     condition: service_healthy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - blog-network

networks:
  blog-network:
    driver: bridge

volumes:
  blog-pgdb-data:
